/*
 * task_handler.c
 *
 *  Created on: May 12, 2025
 *      Author: talur
 */

#include "main.h"

int extract_command(command_t *cmd);
void process_command(command_t *cmd);

const char *msg_inv = "////Invalid option////\n";

void menu_task(void *param)
{
	uint32_t cmd_addr;

	command_t *cmd;

	int  option;

	const char* msg_menu = "===========================\n"
						   "___________Menu____________\n"
								"LED effect       --->0\n"
								"Date and time    --->1\n"
								"Exit             --->2\n"
								"Enter your choice here :";

	while(1)
	{
		xQueueSend(q_print,&msg_menu,portMAX_DELAY);

		//wait for menu commands
		xTaskNotifyWait(0,0,&cmd_addr,portMAX_DELAY);
		cmd = (command_t*)cmd_addr;

		if(cmd->len == 1)
		{
			option = cmd->payload[0] - 48;
			switch(option)
			{
			case 0:
				curr_state = sLedEffect;
				xTaskNotify(handle_led_task,0,eNoAction);
				break;
			case 1:
				curr_state = sRtcMenu;
				xTaskNotify(handle_rtc_task,0,eNoAction);
				break;
			case 2: /*Implement exit */
				break;
			default:
				xQueueSend(q_print,&msg_inv,portMAX_DELAY);
				continue;

			}
		}
		else
		{
			//invalid entry
			xQueueSend(q_print, &msg_menu,portMAX_DELAY);
		}

		//wait to run again when some other task notifies
		xTaskNotifyWait(0,0,NULL,portMAX_DELAY);
	}
}




void rtc_task(void *param)
{
	while(1)
	{

	}
}


void print_task(void *param)
{
	uint32_t *msg;
	while(1)
	{
		xQueueReceive(q_print,&msg,portMAX_DELAY);
		HAL_UART_Transmit(&huart2,(uint8_t*)msg,strlen((char*)msg),HAL_MAX_DELAY);
	}
}

void cmd_handler_task(void *param)
{
	BaseType_t ret;
	command_t cmd;
	while(1)
	{
		/*TODO :Implement notify wait*/
		ret = xTaskNotifyWait(0,0,NULL,portMAX_DELAY);

		if(ret == pdTRUE)
		{
			/*TODO :Process the user data(command)stored in input data queue*/

			process_command(&cmd);
		}


		/*TODO :Notify the command to relevant task */
	}
}


void led_task(void *param)
{
	uint32_t cmd_addr;
	command_t *cmd;
	const char* msg_led = "========================\n"
						  "|      LED Effect     |\n"
						  "========================\n"
						  "(none,e1,e2,e3,e4)\n"
						  "Enter your choice here : ";

	while(1){
		/*TODO: Wait for notification (Notify wait) */
		xTaskNotifyWait(0,0,NULL,portMAX_DELAY);

		/*TODO: Print LED menu */
		xQueueSend(q_print,&msg_led,portMAX_DELAY);

		/*TODO: wait for LED command (Notify wait) */
		xTaskNotifyWait(0,0,&cmd_addr,portMAX_DELAY);
		cmd = (command_t*)cmd_addr;

		if(cmd->len <= 4)
		{
			if(! strcmp((char*)cmd->payload,"none"))
				led_effect_stop();
			else if (! strcmp((char*)cmd->payload,"e1"))
				led_effect(1);
			else if (! strcmp((char*)cmd->payload,"e2"))
				led_effect(2);
			else if (! strcmp((char*)cmd->payload,"e3"))
				led_effect(3);
			else if (! strcmp((char*)cmd->payload,"e4"))
				led_effect(4);
			else
			{
				;/*TODO: print invalid message */
			}
		}
		else
		{
			xQueueSend(q_print,&msg_inv,portMAX_DELAY);
		}
			/*TODO: print invalid message */

		/*TODO : update state variable */
		curr_state = sMainMenu;

		/*TODO : Notify menu task */
		xTaskNotify(handle_menu_task,0,eNoAction);

	}
}



